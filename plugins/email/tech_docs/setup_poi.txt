poi once extracted is 172MB and considering all we really need is the license file, build file(s) and source code we will trim it down so we do not bog up our repository.

This is based of version 3.9 of the poi library downloaded from: http://poi.apache.org

Once extracted we remove the following directories:
	docs
	test-data
	src/testcases
	src/scratchpad
	src/documentation

When we compile the source we use the compile-main target which will only compile the part we need for the plugin.
Unfortunately we're not done yet, because we removed the above folders, the build will fail because it is missing the testing and documentation folders so we need to modify the build script.

Goto the compile-main target and remove (or comment out) the javac section for testing:
From
<code>
    <target name="compile-main">
        <javac target="${jdk.version.class}"
               source="${jdk.version.source}"
               destdir="${main.output.dir}"
               srcdir="${main.src}"
               debug="${compile.debug}"
               encoding="${java.source.encoding}"
               fork="yes"
               includeantruntime="false">
            <classpath refid="main.classpath"/>
        </javac>
	<javac target="${jdk.version.class}"
               source="${jdk.version.source}"
               destdir="${main.output.test.dir}"
               srcdir="${main.src.test}"
               debug="${compile.debug}"
               encoding="${java.source.encoding}"
               fork="yes"
               includeantruntime="false">
            <classpath>
                <path refid="main.classpath"/>
                <pathelement path="${main.output.dir}"/>
            </classpath>
	  </javac>
        <copy todir="${main.output.dir}">
            <fileset dir="${main.resource1.dir}"/>
        </copy>
    </target>
</code>

to
<code>
    <target name="compile-main">
        <mkdir dir="${main.output.dir}"/> <!-- Added -->
        <javac target="${jdk.version.class}"
               source="${jdk.version.source}"
               destdir="${main.output.dir}"
               srcdir="${main.src}"
               debug="${compile.debug}"
               encoding="${java.source.encoding}"
               fork="yes"
               includeantruntime="false">
            <classpath refid="main.classpath"/>
        </javac>
        <!-- COMMENTED OUT AS REMOVED TO SAVE SPACE IN DPR REPOSITORY
	<javac target="${jdk.version.class}"
               source="${jdk.version.source}"
               destdir="${main.output.test.dir}"
               srcdir="${main.src.test}"
               debug="${compile.debug}"
               encoding="${java.source.encoding}"
               fork="yes"
               includeantruntime="false">
            <classpath>
                <path refid="main.classpath"/>
                <pathelement path="${main.output.dir}"/>
            </classpath>
	  </javac> -->
        <copy todir="${main.output.dir}">
            <fileset dir="${main.resource1.dir}"/>
        </copy>
    </target>
</code>


Now the compile-main target should be able to run and build the classes we need, and more importantly the poi source will now only take up a fraction of what it used to!