<?xml version="1.0"?>

<project name="net.sf.mpxj" default="archive" basedir="..">

	<target name="init" depends="init-props,init-dirs">
		<tstamp />
	</target>

	<target name="init-props" description="Initialize properties">
		<tstamp />

		<property name="current.version" value="4.4.0" />

		<!-- 
		The following two properties are only required if you want to use the xjc target.
   		From experience, it is best to put the XSD file in the root MPXJ dir rather
   		than setting a full path here and in the binding.xjb file 
   		-->
		<property name="mspdi.xsd" value="mspdi_pj14-correct.xsd" />
		<property name="primavera.xsd" value="p6apibo.xsd" />

		<property name="lib.dir" value="${basedir}/lib" />
		<property name="doc.dir" value="${basedir}/doc/api" />
		<property name="classes.dir" value="${basedir}/classes" />
		<property name="bak.dir" value="${basedir}/bak" />
		<property name="distribution" value="${basedir}/../mpxj-${current.version}.zip" />
		<property name="ikvm.dir" value="C:\java\ikvm-7.2.4630.5" />

		<!-- 
		MPXJ is targeted at Java 1.6, so to ensure that the builds we distribute
		match this, we use this setting. 
		-->
		<property name="target-jvm-version" value="1.6" />

		<property name="poi.jar" value="poi-3.7-20101029" />

		<path id="poi.path">
			<pathelement location="${lib.dir}/${poi.jar}.jar" />
		</path>

		<path id="junit.path">
			<pathelement location="${basedir}/junit/junit.jar" />
		</path>

		<property name="poi.classpath" refid="poi.path" />
		<property name="junit.classpath" refid="junit.path" />

		<property name="poi.dll" value="${basedir}\lib.net\${poi.jar}.dll" />
		<property name="junit.dll" value="${basedir}\lib.net\junit.dll" />
		<property name="mpxj.dll" value="${basedir}\lib.net\mpxj.dll" />
		<property name="mpxj-for-vb.dll" value="${basedir}\lib.net\mpxj-for-vb.dll" />
		<property name="mpxj-for-csharp.dll" value="${basedir}\lib.net\mpxj-for-csharp.dll" />

		<property name="ikvmc.exe" value="${ikvm.dir}/bin/ikvmc.exe" />
		<available file="${ikvmc.exe}" property="ikvmc.exists" />
	</target>


	<target name="init-dirs" depends="init-props" description="Initialize directories">
		<mkdir dir="${classes.dir}" />
	</target>

	<target name="xjc" depends="init" description="Rebuild source generated by JAXB">
		<exec executable="xjc" dir="${basedir}">
			<arg line="-classpath ${classes.dir} -d ${basedir}/src -b ${basedir}/binding.xjb -p net.sf.mpxj.mspdi.schema ${mspdi.xsd}" />
		</exec>
		<exec executable="xjc" dir="${basedir}">
			<arg line="-dtd -classpath ${classes.dir} -d ${basedir}/src -p net.sf.mpxj.planner.schema ${basedir}/doc/mrproject-0.6.dtd" />
		</exec>
		<exec executable="xjc" dir="${basedir}">
			<arg line="-classpath ${classes.dir} -d ${basedir}/src -b ${basedir}/pm-binding.xjb -p net.sf.mpxj.primavera.schema ${primavera.xsd}" />
		</exec>
	</target>

	<target name="compile" depends="init" description="Compile Everything">
		<javac srcdir="${basedir}/src" destdir="${classes.dir}" classpath="${classpath}:${poi.classpath}:${junit.classpath}" debug="on" source="${target-jvm-version}" target="${target-jvm-version}" includeantruntime="false">
			<compilerarg line="-encoding cp1252" />
			<!-- <compilerarg value="-Xlint"/> -->
		</javac>
	</target>

	<target name="document" depends="init-props" description="Generate documentation">
		<delete dir="${doc.dir}" />
		<mkdir dir="${doc.dir}" />
		<javadoc sourcepath="${basedir}/src" classpath="${classpath}:${poi.classpath}:${junit.classpath}" packagenames="net.sf.mpxj.*" destdir="${doc.dir}" verbose="no" access="public">
		</javadoc>
	</target>

	<target name="jar" depends="compile" description="Create JAR files">
		<jar jarfile="${basedir}/mpxj.jar" basedir="${classes.dir}" />
	</target>

	<target name="dll" depends="compile" description="Build .net DLLs" if="ikvmc.exists">		
		<java classname="net.sf.mpxj.ikvm.MapFileGenerator" failonerror="true">
			<arg value="${basedir}/mpxj.jar" />
			<arg value="${basedir}/ikvm-remap-vb.xml" />
			<arg value="False" />
			<classpath>
				<pathelement path="${classpath}" />
				<pathelement path="${basedir}/mpxj.jar" />
				<pathelement location="${junit.classpath}" />
				<pathelement location="${poi.classpath}" />
			</classpath>
		</java>

		<java classname="net.sf.mpxj.ikvm.MapFileGenerator" failonerror="true">
			<arg value="${basedir}/mpxj.jar" />
			<arg value="${basedir}/ikvm-remap-csharp.xml" />
			<arg value="True" />
			<classpath>
				<pathelement path="${classpath}" />
				<pathelement path="${basedir}/mpxj.jar" />
				<pathelement location="${junit.classpath}" />
				<pathelement location="${poi.classpath}" />
			</classpath>
		</java>

		<exec executable="${ikvmc.exe}" dir="${basedir}">
			<arg line="-nowarn:0111 -nowarn:0100 -nowarn:0003 -out:${poi.dll} -target:library -keyfile:${basedir}\mpxj.snk -version:${current.version}.0 ${basedir}\lib\${poi.jar}.jar" />
		</exec>

		<exec executable="${ikvmc.exe}" dir="${basedir}">
			<arg line="-nowarn:0003 -out:${junit.dll} -target:library -keyfile:${basedir}\mpxj.snk -version:${current.version}.0 ${basedir}\junit\junit.jar" />
		</exec>

		<!-- Generate the original unmapped DLL -->
		<exec executable="${ikvmc.exe}" dir="${basedir}">
			<arg line="-nowarn:0003 -out:${mpxj.dll} -target:library -keyfile:${basedir}\mpxj.snk -version:${current.version}.0 -reference:${basedir}\lib.net\${poi.jar}.dll -reference:${basedir}\lib.net\junit.dll ${basedir}\mpxj.jar" />
		</exec>

		<!-- Generate a mapped DLL for VB, avoids name clashes due to VB's case insensitivity -->
		<exec executable="${ikvmc.exe}" dir="${basedir}">
			<arg line="-nowarn:0003 -out:${mpxj-for-vb.dll} -target:library -keyfile:${basedir}\mpxj.snk -version:${current.version}.0 -remap:${basedir}/ikvm-remap-vb.xml -reference:${basedir}\lib.net\${poi.jar}.dll -reference:${basedir}\lib.net\junit.dll ${basedir}\mpxj.jar" />
		</exec>

		<!-- Generate a mapped DLL for C# and other .Net languages -->
		<exec executable="${ikvmc.exe}" dir="${basedir}">
			<arg line="-nowarn:0003 -out:${mpxj-for-csharp.dll} -target:library -keyfile:${basedir}\mpxj.snk -version:${current.version}.0 -remap:${basedir}/ikvm-remap-csharp.xml -reference:${basedir}\lib.net\${poi.jar}.dll -reference:${basedir}\lib.net\junit.dll -reference:system.dll ${basedir}\mpxj.jar" />
		</exec>

		<delete file="${basedir}/ikvm-remap-vb.xml"/>
		<delete file="${basedir}/ikvm-remap-csharp.xml"/>
	</target>

	<target name="archive" depends="jar,dll" description="Create library files">

	</target>

	<target name="distribute" depends="archive,clean-classes,clean-dot-net" description="Create distribution">
		<zip zipfile="${distribution}">
			<zipfileset dir="${basedir}" prefix="mpxj" excludes="**/CVSROOT/*,**/CVS/*" />
		</zip>
	</target>

	<target name="clean-temp" depends="init-props" description="Clean up temporary files">
		<delete dir="${bak.dir}" />
		<delete>
			<fileset dir="${basedir}" includes="**/*~" defaultexcludes="no" />
		</delete>
	</target>

	<target name="clean-classes" depends="init-props" description="Clean up class files">
		<delete dir="${classes.dir}" />
	</target>

	<target name="clean-dot-net" depends="init-props" description="Clean up .net build files">
		<delete includeemptydirs="true">
			<fileset dir="${basedir}/src.net" defaultexcludes="false">
				<include name="**/bin/**" />
				<include name="**/obj/**" />
				<include name="**/*.suo" />
				<include name="**/*.user" />
			</fileset>
		</delete>
	</target>

	<target name="clean" depends="init-props, clean-temp, clean-classes, clean-dot-net" description="Clean up all files">
		<delete file="${basedir}/mpxj.jar" />
		<delete file="${mpxj.dll}" />
		<delete file="${mpxj-for-csharp.dll}" />
		<delete file="${mpxj-for-vb.dll}" />
		<delete file="${junit.dll}" />
		<delete file="${poi.dll}" />
		<delete dir="${doc.dir}" />
	</target>

	<target name="coverage" depends="archive" description="Code coverage using Emma">
		<property name="emma.dir" value="c:\java\emma-2.0.5312" />

		<path id="emmarun.path">
			<path refid="poi.path" />
			<path refid="junit.path" />
			<pathelement location="${basedir}/mpxj.jar" />
		</path>

		<property name="emmarun.classpath" refid="emmarun.path" />

		<property name="filter" value="-javax.*,-com.*,-org.*,-junit.*,-net.sf.mpxj.mspdi.schema.*" />

		<exec executable="java" dir="${basedir}">
			<arg line="-Xms64m -Xmx512m -Dmpxj.junit.datadir=${basedir}/junit/data -cp ${emma.dir}/lib/emma.jar emmarun -cp ${emmarun.classpath} -r html -sp ${basedir}/src -ix ${filter} junit.textui.TestRunner net.sf.mpxj.junit.MPXJTest" />
		</exec>
	</target>


</project>
